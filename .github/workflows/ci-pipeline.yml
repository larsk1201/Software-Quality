name: CI Pipeline

on:
  push:
    branches:
      - dev
      - test
      - acceptance
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean verify --file Jabberpoint-main/pom.xml

      - name: Run Checkstyle for code quality
        run: mvn checkstyle:check --file Jabberpoint-main/pom.xml

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Run tests with Maven
        run: mvn test --file Jabberpoint-main/pom.xml -Djava.awt.headless=true

  acceptance:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/acceptance'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build JAR
        run: mvn clean package --file Jabberpoint-main/pom.xml

      - name: Upload JAR as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: acceptance-build
          path: Jabberpoint-main/target/*.jar


  production:
    runs-on: ubuntu-latest
    needs: acceptance
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build JAR
        run: mvn clean package --file Jabberpoint-main/pom.xml

      - name: Set up GitHub CLI
        run: |
          sudo apt-get install gh -y
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Create GitHub Release
        run: |
          TAG="v$(date +%Y%m%d%H%M%S)"
          gh release create "$TAG" Jabberpoint-main/target/*.jar --title "Release $TAG" --notes "Automated release from main branch"
